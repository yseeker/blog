<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>dataclass on YS&#39;s blog</title>
    <link>https://www.yusaito.com/blog/tags/dataclass/</link>
    <description>Recent content in dataclass on YS&#39;s blog</description>
    <image>
      <url>https://www.yusaito.com/blog/papermod-cover.png</url>
      <link>https://www.yusaito.com/blog/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Tue, 18 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.yusaito.com/blog/tags/dataclass/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python : Dataclassを試してみる</title>
      <link>https://www.yusaito.com/blog/posts/tech/python/python-dataclass/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.yusaito.com/blog/posts/tech/python/python-dataclass/</guid>
      <description>Python3.7 から加わった Dataclass に関して全く知らなかったので参考煮上げた記事を読みながらメモ.
通常の class と Dataclass の比較 通常の class class Person: def __init__(self, age = 20, gender = &amp;#34;female&amp;#34;): self.gender = gender self.age = age Dataclass from dataclasses import dataclass @dataclass class DataclassPerson: gender: str = &amp;#34;female&amp;#34; age: int = 20 DataClass の利点  可読性が高まる。 型アノテーションができる。 asdict で（ネストされたものでも）辞書に変換可能  参考  </description>
    </item>
    
  </channel>
</rss>
