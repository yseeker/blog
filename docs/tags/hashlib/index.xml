<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>hashlib on YS&#39;s blog</title>
    <link>https://www.yusaito.com/blog/tags/hashlib/</link>
    <description>Recent content in hashlib on YS&#39;s blog</description>
    <image>
      <url>https://www.yusaito.com/blog/papermod-cover.png</url>
      <link>https://www.yusaito.com/blog/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 12 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.yusaito.com/blog/tags/hashlib/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python : hashlibを使って、ハッシュ値を求める</title>
      <link>https://www.yusaito.com/blog/posts/tech/python/how-to-use-hashlib/</link>
      <pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.yusaito.com/blog/posts/tech/python/how-to-use-hashlib/</guid>
      <description>ハッシュ値を求める import hashlib file_name = &amp;#34;important_file.dat&amp;#34; # MD5 ハッシュを生成する hs = hashlib.md5(file_name.encode()).hexdigest() # SHA224 ハッシュを生成する hs = hashlib.sha224(file_name.encode()).hexdigest() 自走プログラマー~Python の先輩が教えるプロジェクト開発のベストプラクティス 120の中でファイル名からハッシュ値を求め、そのハッシュ値の頭 3 文字を中間ディレクトリにして、１つのディレクトリにファイルを集中させないという手法が紹介されていた。
例 file_name = &amp;#34;important_file.dat&amp;#34; hs = hashlib.md5(file_name.encode()).hexdigest() file_path = f&amp;#34;dir_name/{hs[:3]}/{file_name}&amp;#34; 参考  </description>
    </item>
    
  </channel>
</rss>
