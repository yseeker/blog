<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>SETI on YS&#39;s blog</title>
    <link>https://www.yusaito.com/blog/tags/seti/</link>
    <description>Recent content in SETI on YS&#39;s blog</description>
    <image>
      <url>https://www.yusaito.com/blog/papermod-cover.png</url>
      <link>https://www.yusaito.com/blog/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 19 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.yusaito.com/blog/tags/seti/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kaggle：SETIコンペ参加記（ソロ銅：71th/768 teams）</title>
      <link>https://www.yusaito.com/blog/posts/kaggle/seti/</link>
      <pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.yusaito.com/blog/posts/kaggle/seti/</guid>
      <description>SETI Breakthrough Listen - E.T. Signal SearchというKaggleの画像分類コンペに参加しました。
結果 774チーム中74位でソロ銅でした。
コンペの概要 Overviewのページには
 In this competition, use your data science skills to help identify anomalous signals in scans of Breakthrough Listen targets. Because there are no confirmed examples of alien signals to use to train machine learning algorithms, the team included some simulated signals (that they call “needles”) in the haystack of data from the telescope. They have identified some of the hidden needles so that you can train your model to find more.</description>
    </item>
    
    <item>
      <title>Python高速化メモ</title>
      <link>https://www.yusaito.com/blog/posts/tech/python/pyhon_speed/</link>
      <pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.yusaito.com/blog/posts/tech/python/pyhon_speed/</guid>
      <description>https://qiita.com/sotasato/items/cc36a532ba6487dd3dba#1-1-python%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9%E3%82%92%E8%A6%8B%E7%9B%B4%E3%81%99 https://cafeunder.github.io/rosenblock-chainers-blog/2018/04/24/Python-Tips.html https://qiita.com/shaka/items/f180ae4dc945dc7b9066#21-%E5%8F%82%E7%85%A7%E3%81%AE%E4%BB%95%E6%96%B9%E3%81%AB%E6%B3%A8%E6%84%8F https://nonbiri-tereka.hatenablog.com/entry/2016/09/01/072402#%E3%83%AA%E3%82%B9%E3%83%88%E3%81%AE%E7%94%9F%E6%88%90
ドットを使わない  モジュール名まで含めてインストールしておき、内部処理でドットで関数を呼び出さない。  for ループ時の処理  配列にアクセスしない。 enumerate を使う。  Global Interpreter Lock (GIL) スレッドセーフを確保するために、複数スレッドで並列処理ができない。
if 文の条件の順番  if の条件のが厳しいものを最初に置く  計算の高速化  cython numba.jit, numba.cuda.jit  </description>
    </item>
    
  </channel>
</rss>
